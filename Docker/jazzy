FROM ubuntu:22.04 

# Set the locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    export LANG=en_US.UTF-8

# Set the timezone
ENV ROS_VERSION=2
ENV ROS_DISTRO=humbleI
ENV ROS_PYTHON_VERSION=3
ENV TZ=America/Los_Angeles
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


RUN apt-get update && apt-get install -y build-essential cmake zlib1g-dev python3-pip  && rm -rf /var/lib/apt/lists/*



WORKDIR /root/ros2_workspace

RUN apt-get update && apt install -y software-properties-common  curl && rm -rf /var/lib/apt/lists/*
RUN add-apt-repository universe
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN apt-get update && apt update && apt install -y \
    python3-flake8-blind-except \
    python3-flake8-class-newline \
    python3-flake8-deprecated \
    python3-mypy \
    python3-pip \
    python3-pytest \
    python3-pytest-cov \
    python3-pytest-mock \
    python3-pytest-repeat \
    python3-pytest-rerunfailures \
    python3-pytest-runner \
    python3-pytest-timeout \
    ros-dev-tools && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir -p ~/ros2_jazzy/src && cd ~/ros2_jazzy && wget https://raw.githubusercontent.com/ros2/ros2/jazzy/ros2.repos  && pwd && ls && vcs import src < ros2.repos && vcs pull src
RUN rosdep init
RUN rosdep update
RUN cd ~/ros2_jazzy && pwd
RUN cd ~/ros2_jazzy && ls -l
RUN apt-get update && cd ~/ros2_jazzy && rosdep install --from-paths src --ignore-src -y --skip-keys "fastcdr rti-connext-dds-6.0.1 urdfdom_headers"
RUN cd ~/ros2_jazzy && colcon build --symlink-install

# # This is an auto generated Dockerfile for ros:ros-core
# # generated from docker_images_ros2/create_ros_core_image.Dockerfile.em
# FROM osrf/ros:jazzy-desktop-full

# USER root

# # setup timezone
# RUN echo 'Etc/UTC' > /etc/timezone && \
#     ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
#     apt-get install -q -y --no-install-recommends tzdata && \
#     rm -rf /var/lib/apt/lists/*

# # install packages
# RUN apt-get install -q -y --no-install-recommends \
#     dirmngr \
#     gnupg2 \
#     && rm -rf /var/lib/apt/lists/*

# # setup keys
# RUN set -eux; \
#        key='C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654'; \
#        export GNUPGHOME="$(mktemp -d)"; \
#        gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
#        mkdir -p /usr/share/keyrings; \
#        gpg --batch --export "$key" > /usr/share/keyrings/ros2-testing-archive-keyring.gpg; \
#        gpgconf --kill all; \
#        rm -rf "$GNUPGHOME"

# # setup sources.list
# RUN echo "deb [ signed-by=/usr/share/keyrings/ros2-testing-archive-keyring.gpg ] http://packages.ros.org/ros2-testing/ubuntu noble main" > /etc/apt/sources.list.d/ros2-testing.list

# # setup environment
# ENV LANG C.UTF-8
# ENV LC_ALL C.UTF-8

# ENV ROS_DISTRO jazzy

# # install ros2 packages
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     ros-jazzy-ros-core=0.11.0-1* \
#     && rm -rf /var/lib/apt/lists/*

# # setup entrypoint
# COPY ./ros_entrypoint.sh /

# ENTRYPOINT ["/ros_entrypoint.sh"]
# CMD ["bash"]


# RUN apt-get update && apt-get install -y --no-install-recommends \
#   ros-jazzy-laser-geometry \
#   ros-jazzy-joint-state-publisher \
#   ros-jazzy-xacro \
#   ros-jazzy-nav2-* \
#   ros-jazzy-pcl-ros \
#   nlohmann-json3-dev \
#   && rm -rf /var/lib/apt/lists/*
# ENV DEBIAN_FRONTEND=

# RUN useradd -ms /bin/bash ros
# # ARG USERNAME=ros
# # ARG USER_UID=1002
# # ARG USER_GID=$USER_UID

# # Create a non-root user
# RUN apt-get update \
#   && apt-get install -y sudo \
#   && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/ros\
#   && chmod 0440 /etc/sudoers.d/ros \
#   && rm -rf /var/lib/apt/lists/*

# # Set up autocompletion for user
# RUN apt-get update && apt-get install -y git-core bash-completion \
# && echo "if [ -f /opt/ros/${ROS_DISTRO}/setup.bash ]; then source /opt/ros/${ROS_DISTRO}/setup.bash; fi" >> /home/$USERNAME/.bashrc \
# && echo "if [ -f /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash ]; then source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash; fi" >> /home/$USERNAME/.bashrc \
# && rm -rf /var/lib/apt/lists/* 

# USER ros
# RUN cat <<EOT >> /home/ros/.bashrc
# alias cb='colcon build --symlink-install'
# alias fr='ros2 run tf2_tools view_frames'
# alias pm='ros2 topic pub --rate 10 /cmd_vel geometry_msgs/msg/Twist "{linear: {x: 0.2}}"'
# alias rd='rosdep install --from-paths src --ignore-src -r -y'
# alias tele='ros2 run teleop_twist_keyboard teleop_twist_keyboard'
# source /opt/ros/jazzy/setup.bash
# source install/setup.bash
# EOT

# # RUN chown -R ros:ros /home/ros
# ENV PYTHONUNBUFFERED 1
# # ENV HOME=/home/ros
# # ENV SHELL /bin/bash
# # CMD source /home/ros/.bashrc
# # Force Python stdout and stderr streams to be unbuffered.
# USER ros
# WORKDIR /home/ros
