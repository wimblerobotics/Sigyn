# This is an auto generated Dockerfile for ros:ros-core
# generated from docker_images_ros2/create_ros_core_image.Dockerfile.em
FROM osrf/ros:jazzy-desktop-full

USER root

# # setup timezone
# RUN echo 'Etc/UTC' > /etc/timezone && \
#     ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
#     apt-get install -q -y --no-install-recommends tzdata && \
#     rm -rf /var/lib/apt/lists/*

# # install packages
# RUN apt-get install -q -y --no-install-recommends \
#     dirmngr \
#     gnupg2 \
#     && rm -rf /var/lib/apt/lists/*

# # setup keys
# RUN set -eux; \
#        key='C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654'; \
#        export GNUPGHOME="$(mktemp -d)"; \
#        gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
#        mkdir -p /usr/share/keyrings; \
#        gpg --batch --export "$key" > /usr/share/keyrings/ros2-testing-archive-keyring.gpg; \
#        gpgconf --kill all; \
#        rm -rf "$GNUPGHOME"

# # setup sources.list
# RUN echo "deb [ signed-by=/usr/share/keyrings/ros2-testing-archive-keyring.gpg ] http://packages.ros.org/ros2-testing/ubuntu noble main" > /etc/apt/sources.list.d/ros2-testing.list

# # setup environment
# ENV LANG C.UTF-8
# ENV LC_ALL C.UTF-8

# ENV ROS_DISTRO jazzy

# # install ros2 packages
# RUN apt-get update && apt-get install -y --no-install-recommends \
#     ros-jazzy-ros-core=0.11.0-1* \
#     && rm -rf /var/lib/apt/lists/*

# setup entrypoint
# COPY ./ros_entrypoint.sh /

# ENTRYPOINT ["/ros_entrypoint.sh"]
# CMD ["bash"]


RUN apt-get update && apt-get install -y --no-install-recommends \
  ros-jazzy-laser-geometry \
  ros-jazzy-joint-state-publisher \
  ros-jazzy-xacro \
  ros-jazzy-nav2-* \
  ros-jazzy-pcl-ros \
  nlohmann-json3-dev \
  && rm -rf /var/lib/apt/lists/*
ENV DEBIAN_FRONTEND=

RUN useradd -ms /bin/bash ros
# ARG USERNAME=ros
# ARG USER_UID=1002
# ARG USER_GID=$USER_UID

# Create a non-root user
RUN apt-get update \
  && apt-get install -y sudo \
  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/ros\
  && chmod 0440 /etc/sudoers.d/ros \
  && rm -rf /var/lib/apt/lists/*

# Set up autocompletion for user
RUN apt-get update && apt-get install -y git-core bash-completion \
&& echo "if [ -f /opt/ros/${ROS_DISTRO}/setup.bash ]; then source /opt/ros/${ROS_DISTRO}/setup.bash; fi" >> /home/$USERNAME/.bashrc \
&& echo "if [ -f /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash ]; then source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash; fi" >> /home/$USERNAME/.bashrc \
&& rm -rf /var/lib/apt/lists/* 

USER ros
RUN cat <<EOT >> /home/ros/.bashrc
alias cb='colcon build --symlink-install'
alias fr='ros2 run tf2_tools view_frames'
alias pm='ros2 topic pub --rate 10 /cmd_vel geometry_msgs/msg/Twist "{linear: {x: 0.2}}"'
alias rd='rosdep install --from-paths src --ignore-src -r -y'
alias tele='ros2 run teleop_twist_keyboard teleop_twist_keyboard'
source /opt/ros/jazzy/setup.bash
source install/setup.bash
EOT

# RUN chown -R ros:ros /home/ros
ENV PYTHONUNBUFFERED 1
# ENV HOME=/home/ros
# ENV SHELL /bin/bash
# CMD source /home/ros/.bashrc
# Force Python stdout and stderr streams to be unbuffered.
USER ros
WORKDIR /home/ros
