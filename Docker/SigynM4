FROM --platform=linux/arm64 ubuntu:24.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_VERSION=2
ENV ROS_DISTRO=jazzy
ENV ROS_PYTHON_VERSION=3
ENV TZ=America/Los_Angeles

# Set the locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    export LANG=en_US.UTF-8

# Set the timezone
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install essential packages
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    curl \
    git \
    gnupg2 \
    lsb-release \
    python3-pip \
    software-properties-common \
    wget \
    zlib1g-dev \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install X11 and GUI dependencies for RViz and Gazebo (Ubuntu 24.04 compatible)
RUN apt-get update && apt-get install -y \
    x11-apps \
    x11-utils \
    x11-xserver-utils \
    xauth \
    xvfb \
    libxcb-xinerama0 \
    libxcb-xinput0 \
    libxcb-xkb1 \
    libxkbcommon-x11-0 \
    libgl1-mesa-dev \
    libgl1-mesa-dri \
    libglu1-mesa \
    libglx-mesa0 \
    libglapi-mesa \
    libxrandr2 \
    libxss1 \
    libgtk-3-0 \
    libasound2t64 \
    libxtst6 \
    libxrender1 \
    libxi6 \
    libqt5widgets5 \
    libqt5gui5 \
    libqt5core5a \
    qtbase5-dev \
    qt5-qmake \
    iperf3 \
    mesa-utils \
    dbus-x11 \
    && rm -rf /var/lib/apt/lists/*

# Add ROS 2 apt repository
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Update package list
RUN apt-get update

# Install ROS 2 Jazzy Desktop Full
RUN apt-get install -y ros-jazzy-desktop-full && rm -rf /var/lib/apt/lists/*

# Install development tools
RUN apt-get update && apt-get install -y \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    python3-argcomplete \
    ros-dev-tools \
    && rm -rf /var/lib/apt/lists/*

# Initialize rosdep
RUN rosdep init && rosdep update

# Install additional ROS 2 packages (verified for Jazzy)
RUN apt-get update && apt-get install -y \
    ros-jazzy-joint-state-publisher \
    ros-jazzy-joint-state-publisher-gui \
    ros-jazzy-robot-localization \
    ros-jazzy-robot-state-publisher \
    ros-jazzy-rqt \
    ros-jazzy-rqt-common-plugins \
    ros-jazzy-rviz2 \
    ros-jazzy-tf2-tools \
    ros-jazzy-turtlesim \
    ros-jazzy-twist-mux \
    ros-jazzy-urdf \
    ros-jazzy-xacro \
    && rm -rf /var/lib/apt/lists/*

# Install Gazebo packages (be specific about versions)
RUN apt-get update && apt-get install -y \
    ros-jazzy-ros-gz-bridge \
    ros-jazzy-ros-gz-sim \
    ros-jazzy-ros-gz-interfaces \
    ros-jazzy-gz-ros2-control \
    && rm -rf /var/lib/apt/lists/*

# Install navigation packages
RUN apt-get update && apt-get install -y \
    ros-jazzy-navigation2 \
    ros-jazzy-nav2-bringup \
    ros-jazzy-slam-toolbox \
    ros-jazzy-laser-geometry \
    ros-jazzy-pcl-ros \
    ros-jazzy-image-transport \
    ros-jazzy-cv-bridge \
    ros-jazzy-vision-opencv \
    && rm -rf /var/lib/apt/lists/*

# Install missing packages from rosdep failures
RUN apt-get update && apt-get install -y \
    python3-seaborn \
    liburdfdom-tools \
    && rm -rf /var/lib/apt/lists/*

# Install additional ROS 2 packages (check availability first)
RUN apt-get update && \
    apt-get install -y \
    ros-jazzy-cartographer \
    ros-jazzy-cartographer-ros \
    ros-jazzy-pointcloud-to-laserscan \
    ros-jazzy-controller-manager \
    ros-jazzy-ros2-control \
    ros-jazzy-ros2-controllers \
    && rm -rf /var/lib/apt/lists/*

# Install additional development packages
RUN apt-get update && apt-get install -y \
    nlohmann-json3-dev \
    python3-pytest \
    python3-pytest-cov \
    python3-pytest-mock \
    python3-flake8 \
    python3-mypy \
    vim \
    nano \
    bash-completion \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user
ARG USERNAME=ros
ARG USER_UID=1001
ARG USER_GID=1001

RUN apt-get update && apt-get install -y sudo && \
    if ! getent group $USER_GID > /dev/null 2>&1; then \
        groupadd --gid $USER_GID $USERNAME; \
    fi && \
    useradd --uid $USER_UID --gid $USER_GID -m $USERNAME && \
    echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME && \
    rm -rf /var/lib/apt/lists/*

# Set up environment for the user
USER $USERNAME
WORKDIR /home/$USERNAME

# Create workspace directory
RUN mkdir -p /home/$USERNAME/sigyn_ws/src

# Update rosdep for the user
RUN rosdep update

# Set up bash configuration with proper ROS 2 Jazzy environment
RUN echo "source /opt/ros/jazzy/setup.bash" >> /home/$USERNAME/.bashrc && \
    echo "source /usr/share/colcon_argcomplete/hook/colcon-argcomplete.bash" >> /home/$USERNAME/.bashrc && \
    echo "export ROS_DOMAIN_ID=42" >> /home/$USERNAME/.bashrc && \
    echo "export DISPLAY=:0" >> /home/$USERNAME/.bashrc && \
    echo "export QT_X11_NO_MITSHM=1" >> /home/$USERNAME/.bashrc && \
    echo "alias cb='colcon build --symlink-install'" >> /home/$USERNAME/.bashrc && \
    echo "alias cbt='colcon test'" >> /home/$USERNAME/.bashrc && \
    echo "alias cbtr='colcon test-result --verbose'" >> /home/$USERNAME/.bashrc && \
    echo "alias cs='source install/setup.bash'" >> /home/$USERNAME/.bashrc && \
    echo "alias rd='rosdep install --from-paths src --ignore-src -r -y'" >> /home/$USERNAME/.bashrc && \
    echo "alias rqt='rqt --force-discover'" >> /home/$USERNAME/.bashrc

# Set environment variables for Python and GUI
ENV PYTHONUNBUFFERED=1
ENV QT_X11_NO_MITSHM=1
ENV DISPLAY=:0

# Set the default command
CMD ["/bin/bash"]